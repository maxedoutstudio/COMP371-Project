#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;
layout(location = 2) in vec3 vertexColor;
layout(location = 3) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec2 UV;
//out vec4 v_color;

// Values that stay constant for the whole mesh.
uniform mat4 ViewProjectonTransform;
uniform mat4 WorldTransform;

void main(){
	gl_Position =  ViewProjectonTransform * WorldTransform * vec4(vertexPosition_modelspace,1);
	
	// UV of the vertex. No special space for this one.
	UV = vertexUV;

	//v_color = vec4(vertexColor, 1.0f);
}